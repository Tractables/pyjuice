Search.setIndex({"docnames": ["index", "python-api/generated/pyjuice.blockify", "python-api/generated/pyjuice.compile", "python-api/generated/pyjuice.deepcopy", "python-api/generated/pyjuice.inputs", "python-api/generated/pyjuice.merge", "python-api/generated/pyjuice.multiply", "python-api/generated/pyjuice.nodes.InputNodes", "python-api/generated/pyjuice.nodes.ProdNodes", "python-api/generated/pyjuice.nodes.SumNodes", "python-api/generated/pyjuice.nodes.distributions.Bernoulli", "python-api/generated/pyjuice.nodes.distributions.Categorical", "python-api/generated/pyjuice.nodes.distributions.DiscreteLogistic", "python-api/generated/pyjuice.nodes.distributions.Gaussian", "python-api/generated/pyjuice.nodes.distributions.MaskedCategorical", "python-api/generated/pyjuice.nodes.foldup_aggregate", "python-api/generated/pyjuice.nodes.foreach", "python-api/generated/pyjuice.set_block_size", "python-api/generated/pyjuice.structures.HCLT", "python-api/generated/pyjuice.structures.HMM", "python-api/generated/pyjuice.structures.PD", "python-api/generated/pyjuice.summate", "python-api/generated/pyjuice.unblockify", "python-api/nodes", "python-api/pyjuice", "python-api/structures", "python-api/tensorcircuit"], "filenames": ["index.rst", "python-api/generated/pyjuice.blockify.rst", "python-api/generated/pyjuice.compile.rst", "python-api/generated/pyjuice.deepcopy.rst", "python-api/generated/pyjuice.inputs.rst", "python-api/generated/pyjuice.merge.rst", "python-api/generated/pyjuice.multiply.rst", "python-api/generated/pyjuice.nodes.InputNodes.rst", "python-api/generated/pyjuice.nodes.ProdNodes.rst", "python-api/generated/pyjuice.nodes.SumNodes.rst", "python-api/generated/pyjuice.nodes.distributions.Bernoulli.rst", "python-api/generated/pyjuice.nodes.distributions.Categorical.rst", "python-api/generated/pyjuice.nodes.distributions.DiscreteLogistic.rst", "python-api/generated/pyjuice.nodes.distributions.Gaussian.rst", "python-api/generated/pyjuice.nodes.distributions.MaskedCategorical.rst", "python-api/generated/pyjuice.nodes.foldup_aggregate.rst", "python-api/generated/pyjuice.nodes.foreach.rst", "python-api/generated/pyjuice.set_block_size.rst", "python-api/generated/pyjuice.structures.HCLT.rst", "python-api/generated/pyjuice.structures.HMM.rst", "python-api/generated/pyjuice.structures.PD.rst", "python-api/generated/pyjuice.summate.rst", "python-api/generated/pyjuice.unblockify.rst", "python-api/nodes.rst", "python-api/pyjuice.rst", "python-api/structures.rst", "python-api/tensorcircuit.rst"], "titles": ["Welcome to PyJuice\u2019s documentation!", "pyjuice.blockify", "pyjuice.compile", "pyjuice.deepcopy", "pyjuice.inputs", "pyjuice.merge", "pyjuice.multiply", "pyjuice.nodes.InputNodes", "pyjuice.nodes.ProdNodes", "pyjuice.nodes.SumNodes", "pyjuice.nodes.distributions.Bernoulli", "pyjuice.nodes.distributions.Categorical", "pyjuice.nodes.distributions.DiscreteLogistic", "pyjuice.nodes.distributions.Gaussian", "pyjuice.nodes.distributions.MaskedCategorical", "pyjuice.nodes.foldup_aggregate", "pyjuice.nodes.foreach", "pyjuice.set_block_size", "pyjuice.structures.HCLT", "pyjuice.structures.HMM", "pyjuice.structures.PD", "pyjuice.summate", "pyjuice.unblockify", "pyjuice.nodes", "pyjuice", "pyjuice.structures", "pyjuice.TensorCircuit"], "terms": {"i": [0, 4, 6, 7, 8, 9, 13, 16, 21, 26], "python": 0, "librari": 0, "probabilist": 0, "circuit": [0, 26], "It": [0, 6, 7, 8, 9, 21], "aim": 0, "provid": 0, "easi": 0, "us": [0, 1, 2, 13, 16, 18], "environ": 0, "defin": [0, 4, 6, 9, 19, 21], "pc": [0, 1, 2, 3, 4, 5, 6, 15, 16, 17, 20, 21, 22], "support": 0, "effici": 0, "scalabl": 0, "train": 0, "infer": 0, "instal": 0, "tutori": 0, "node": [0, 2, 4, 5, 6, 17, 18, 20, 21, 22], "tensorcircuit": 0, "structur": 0, "root_n": [1, 3, 15, 16, 22, 26], "circuitnod": [1, 2, 3, 4, 5, 6, 8, 9, 15, 16, 21, 22, 26], "sparsity_toler": 1, "float": [1, 2, 12, 13, 18, 26], "0": [1, 2, 4, 5, 7, 8, 9, 12, 13, 17, 18, 21, 26], "25": 1, "max_target_block_s": 1, "int": [1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 26], "32": [1, 18], "use_cuda": 1, "bool": [1, 2, 3, 6, 7, 19, 20, 22, 26], "true": [1, 2, 6, 16, 19, 22, 26], "gener": [1, 20], "an": [1, 2, 4, 6, 15, 16, 21, 22], "equival": [1, 2, 22], "potenti": [1, 2], "high": 1, "block": [1, 2, 4, 6, 7, 8, 9, 17, 18, 20, 21, 22], "size": [1, 4, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26], "input": [1, 3, 5, 7, 17, 18, 20, 21, 22, 26], "allow": [1, 2], "fraction": [1, 2], "zero": 1, "ad": [1, 2, 13], "should": [1, 4, 14, 17, 21], "rang": [1, 12, 14], "1": [1, 5, 6, 17, 18, 22, 26], "maximum": [1, 2, 20], "search": 1, "gpu": [1, 2, 18], "when": [1, 18], "possibl": 1, "return": [1, 2, 3, 4, 6, 21, 22], "n": [2, 16], "layer_sparsity_tol": [2, 26], "5": [2, 5, 26], "max_num_partit": [2, 26], "none": [2, 3, 4, 6, 7, 8, 9, 13, 15, 18, 20, 21, 22, 26], "disable_gpu_compil": [2, 26], "fals": [2, 3, 6, 7, 20, 26], "force_gpu_compil": [2, 26], "max_tied_ns_per_parflow_block": [2, 26], "8": [2, 26], "verbos": [2, 26], "modul": 2, "repres": [2, 7, 8, 9, 10, 11, 12, 13, 14], "dag": 2, "torch": [2, 7, 18], "nn": 2, "root": [2, 15, 16, 18], "": [2, 20], "pseudo": 2, "edg": [2, 6, 9, 21], "within": 2, "everi": [2, 6, 9, 20, 21], "layer": [2, 26], "better": 2, "set": [2, 4, 6, 7, 9, 17, 21], "small": 2, "number": [2, 4, 7, 8, 9, 11, 12, 14, 18, 20, 21], "spars": 2, "option": [2, 3, 4, 6, 7, 8, 9, 15, 20, 21, 22], "partit": 2, "forc": 2, "cpu": 2, "how": 2, "mani": 2, "group": 2, "ti": [2, 3], "ar": [2, 13], "share": 2, "same": [2, 3, 4, 6, 21], "flow": [2, 26], "gradient": 2, "accumul": 2, "higher": 2, "valu": [2, 12, 13], "consum": 2, "less": 2, "memori": [2, 18], "lower": 2, "avoid": 2, "stall": 2, "caus": 2, "atom": 2, "oper": 2, "whether": [2, 3, 19, 20, 22], "displai": 2, "progress": 2, "type": [2, 14, 18, 20], "tie_param": 3, "var_map": 3, "dict": [3, 15, 18, 20, 26], "creat": [3, 7, 8, 9], "tie": 3, "between": [3, 20], "origin": 3, "copi": [3, 22], "alwai": 3, "map": 3, "dictionari": [3, 15, 22], "variabl": [3, 4, 6, 7, 18, 21], "var": [4, 17], "union": [4, 6, 7, 20, 21], "sequenc": [4, 7, 8, 9, 19, 20, 22], "num_node_block": [4, 5, 6, 7, 8, 9, 17, 21], "dist": [4, 5, 7, 17], "distribut": [4, 7, 18, 20], "object": [4, 6, 15, 21], "param": [4, 7, 9], "tensor": [4, 6, 7, 8, 9, 18, 21, 26], "num_nod": [4, 17, 21], "block_siz": [4, 6, 7, 8, 9, 17, 18, 20, 21, 22], "kwarg": [4, 6, 7, 8, 9, 15, 21, 26], "inputnod": [4, 6, 21], "construct": [4, 6, 17, 18, 19, 21], "vector": [4, 6, 7, 8, 9, 21], "have": [4, 6, 21], "id": 4, "list": [4, 6, 21], "multivari": 4, "each": [4, 20, 21], "e": [4, 6, 20, 21], "total": [4, 21], "from": 4, "altern": [4, 16, 21], "divic": [4, 21], "doe": [4, 21], "chang": [4, 21], "semant": [4, 21], "affect": [4, 21], "speed": [4, 21], "compil": [4, 21], "subclass": [4, 6, 21], "ns1": 5, "arg": [5, 6, 21], "ident": 5, "region": 5, "togeth": 5, "first": [5, 6, 21], "remain": [5, 6, 21], "exampl": [5, 16, 17], "i00": 5, "categor": [5, 14, 17, 18, 20], "num_cat": [5, 11, 12, 14, 17, 18, 20], "i01": 5, "i10": 5, "i11": 5, "m00": 5, "multipli": [5, 8, 17], "m01": 5, "n0": 5, "summat": [5, 9, 17], "n1": 5, "n_new": 5, "nodes1": [6, 21], "prodnodesch": 6, "edge_id": [6, 8, 9, 21], "sparse_edg": 6, "prodnod": [6, 21], "product": [6, 8, 20], "given": [6, 21], "children": [6, 8, 21], "disjoint": 6, "note": [6, 13, 16, 21], "requir": [6, 21], "all": [6, 15, 16, 21], "If": [6, 21], "specifi": [6, 13, 20], "output": 6, "where": 6, "ith": [6, 8, 9, 21], "connect": [6, 8, 9, 20, 21], "child": [6, 8, 9, 21], "By": 6, "default": 6, "denot": 6, "unless": 6, "assum": 6, "sumnod": [6, 21], "matrix": [6, 8, 9, 21], "j": [6, 8, 9, 21], "th": [6, 8], "jth": [6, 8, 9, 21], "becom": 6, "we": 6, "class": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 26], "scope": 7, "bitset": 7, "_no_set_meta_param": 7, "A": [7, 8, 9, 10, 11, 12, 13, 14], "__init__": [7, 8, 9, 10, 11, 12, 13, 14, 17], "method": [7, 8, 9, 10, 11, 12, 13, 14], "ch": [8, 9], "ndarrai": 8, "zero_param_mask": 9, "sum": [9, 20, 21], "2": [9, 21], "column": [9, 21], "fulli": [9, 21], "attribut": [10, 11, 12, 13, 14], "categori": [11, 12, 14], "val_rang": 12, "tupl": [12, 20], "min_std": 12, "01": [12, 13], "discret": 12, "logist": 12, "minimum": 12, "standard": [12, 13], "deviat": [12, 13], "mu": 13, "sigma": [13, 18], "min_sigma": 13, "approxim": 13, "mean": 13, "std": 13, "data": [13, 18, 20], "thi": [13, 20], "initi": 13, "The": 13, "NOT": 13, "directli": [13, 16], "perturb": 13, "you": 13, "can": [13, 16], "behavior": 13, "pass": 13, "init_paramet": 13, "function": [13, 15, 16, 26], "mask_mod": 14, "str": [14, 20, 22, 26], "mask": 14, "full_mask": 14, "rev_rang": 14, "func": [15, 16], "callabl": [15, 16, 20, 26], "cach": [15, 26], "travers": [15, 16], "bottom": [15, 16], "up": [15, 16], "aggreg": 15, "per": 15, "comput": [15, 18, 26], "store": 15, "specif": 16, "iter": 16, "via": 16, "statement": 16, "see": 16, "below": 16, "call": [16, 26], "do": [16, 22], "someth": 16, "revers": 16, "top": 16, "down": 16, "context": 17, "manag": 17, "target": [17, 22], "16": 17, "ni": 17, "4": [17, 20], "20": 17, "print": 17, "64": [17, 18], "x": 18, "num_lat": [18, 19, 20], "num_bin": 18, "015625": 18, "chunk_siz": 18, "num_root_n": 18, "input_dist": [18, 20], "input_node_typ": 18, "input_node_param": 18, "256": [18, 20], "hidden": [18, 19], "chow": 18, "liu": 18, "tree": 18, "http": [18, 20], "arxiv": [18, 20], "org": [18, 20], "pdf": [18, 20], "2106": 18, "02264": 18, "sampl": 18, "backbon": 18, "latent": [18, 19, 20], "space": [18, 19, 20], "bin": 18, "divid": 18, "mutual": 18, "inform": 18, "estim": 18, "variat": 18, "chunk": 18, "consid": 18, "decreas": [18, 22], "run": 18, "out": 18, "seq_length": 19, "num_emit": 19, "homogen": 19, "markov": 19, "model": 19, "length": 19, "emiss": 19, "inhomogen": 19, "data_shap": 20, "split_interv": 20, "split_point": 20, "max_split_depth": 20, "max_prod_block_conn": 20, "structure_typ": 20, "sum_domin": 20, "input_layer_fn": [20, 26], "input_layer_typ": 20, "input_layer_param": 20, "use_linear_mix": 20, "1202": 20, "3732": 20, "shape": 20, "g": 20, "h": 20, "w": 20, "3": 20, "imag": 20, "integ": 20, "interv": 20, "split": 20, "point": 20, "dimens": 20, "either": 20, "need": 20, "depth": 20, "reus": 20, "prod_domin": 20, "sumnodesch": 21, "recurs": 22, "keys_to_copi": 22, "just": 22, "current": 22, "properti": 22, "test": 26, "forward": 26, "return_cach": 26, "record_cudagraph": 26, "apply_cudagraph": 26, "force_use_fp16": 26, "force_use_fp32": 26, "b": 26, "num_var": 26, "custom": 26, "string": 26, "try": 26, "correspond": 26, "member": 26, "input_lay": 26, "addit": 26, "argument": 26, "backward": 26, "ll_weight": 26, "compute_param_flow": 26, "flows_memori": 26, "allow_modify_flow": 26, "num_root": 26}, "objects": {"pyjuice": [[26, 0, 1, "", "TensorCircuit"], [1, 2, 1, "", "blockify"], [2, 2, 1, "", "compile"], [3, 2, 1, "", "deepcopy"], [4, 2, 1, "", "inputs"], [5, 2, 1, "", "merge"], [6, 2, 1, "", "multiply"], [17, 0, 1, "", "set_block_size"], [21, 2, 1, "", "summate"], [22, 2, 1, "", "unblockify"]], "pyjuice.TensorCircuit": [[26, 1, 1, "", "backward"], [26, 1, 1, "", "forward"]], "pyjuice.nodes": [[7, 0, 1, "", "InputNodes"], [8, 0, 1, "", "ProdNodes"], [9, 0, 1, "", "SumNodes"], [15, 2, 1, "", "foldup_aggregate"], [16, 2, 1, "", "foreach"]], "pyjuice.nodes.InputNodes": [[7, 1, 1, "", "__init__"]], "pyjuice.nodes.ProdNodes": [[8, 1, 1, "", "__init__"]], "pyjuice.nodes.SumNodes": [[9, 1, 1, "", "__init__"]], "pyjuice.nodes.distributions": [[10, 0, 1, "", "Bernoulli"], [11, 0, 1, "", "Categorical"], [12, 0, 1, "", "DiscreteLogistic"], [13, 0, 1, "", "Gaussian"], [14, 0, 1, "", "MaskedCategorical"]], "pyjuice.nodes.distributions.Bernoulli": [[10, 1, 1, "", "__init__"]], "pyjuice.nodes.distributions.Categorical": [[11, 1, 1, "", "__init__"]], "pyjuice.nodes.distributions.DiscreteLogistic": [[12, 1, 1, "", "__init__"]], "pyjuice.nodes.distributions.Gaussian": [[13, 1, 1, "", "__init__"]], "pyjuice.nodes.distributions.MaskedCategorical": [[14, 1, 1, "", "__init__"]], "pyjuice.set_block_size": [[17, 1, 1, "", "__init__"]], "pyjuice.structures": [[18, 2, 1, "", "HCLT"], [19, 2, 1, "", "HMM"], [20, 2, 1, "", "PD"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "pyjuic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "": 0, "document": 0, "get": 0, "start": 0, "api": 0, "blockifi": 1, "compil": [2, 24], "deepcopi": 3, "input": [4, 23], "merg": 5, "multipli": 6, "node": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23], "inputnod": 7, "prodnod": 8, "sumnod": 9, "distribut": [10, 11, 12, 13, 14, 23], "bernoulli": 10, "categor": 11, "discretelogist": 12, "gaussian": 13, "maskedcategor": 14, "foldup_aggreg": 15, "foreach": 16, "set_block_s": 17, "structur": [18, 19, 20, 24, 25], "hclt": 18, "hmm": 19, "pd": 20, "summat": 21, "unblockifi": 22, "method": 23, "pc": 24, "creation": 24, "transform": 24, "tensorcircuit": 26}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Welcome to PyJuice\u2019s documentation!": [[0, "welcome-to-pyjuice-s-documentation"]], "Getting started": [[0, "getting-started"]], "API": [[0, "api"]], "pyjuice.blockify": [[1, "pyjuice-blockify"]], "pyjuice.compile": [[2, "pyjuice-compile"]], "pyjuice.deepcopy": [[3, "pyjuice-deepcopy"]], "pyjuice.inputs": [[4, "pyjuice-inputs"]], "pyjuice.merge": [[5, "pyjuice-merge"]], "pyjuice.multiply": [[6, "pyjuice-multiply"]], "pyjuice.nodes.InputNodes": [[7, "pyjuice-nodes-inputnodes"]], "pyjuice.nodes.ProdNodes": [[8, "pyjuice-nodes-prodnodes"]], "pyjuice.nodes.SumNodes": [[9, "pyjuice-nodes-sumnodes"]], "pyjuice.nodes.distributions.Bernoulli": [[10, "pyjuice-nodes-distributions-bernoulli"]], "pyjuice.nodes.distributions.Categorical": [[11, "pyjuice-nodes-distributions-categorical"]], "pyjuice.nodes.distributions.DiscreteLogistic": [[12, "pyjuice-nodes-distributions-discretelogistic"]], "pyjuice.nodes.distributions.Gaussian": [[13, "pyjuice-nodes-distributions-gaussian"]], "pyjuice.nodes.distributions.MaskedCategorical": [[14, "pyjuice-nodes-distributions-maskedcategorical"]], "pyjuice.nodes.foldup_aggregate": [[15, "pyjuice-nodes-foldup-aggregate"]], "pyjuice.nodes.foreach": [[16, "pyjuice-nodes-foreach"]], "pyjuice.set_block_size": [[17, "pyjuice-set-block-size"]], "pyjuice.structures.HCLT": [[18, "pyjuice-structures-hclt"]], "pyjuice.structures.HMM": [[19, "pyjuice-structures-hmm"]], "pyjuice.structures.PD": [[20, "pyjuice-structures-pd"]], "pyjuice.summate": [[21, "pyjuice-summate"]], "pyjuice.unblockify": [[22, "pyjuice-unblockify"]], "pyjuice.nodes": [[23, "pyjuice-nodes"]], "Nodes": [[23, "nodes"]], "Methods": [[23, "methods"]], "Input Distributions": [[23, "input-distributions"]], "pyjuice": [[24, "pyjuice"]], "PC Creation": [[24, "pc-creation"]], "PC Structure Transformation": [[24, "pc-structure-transformation"]], "PC Compilation": [[24, "pc-compilation"]], "pyjuice.structures": [[25, "pyjuice-structures"]], "pyjuice.TensorCircuit": [[26, "pyjuice-tensorcircuit"]]}, "indexentries": {"blockify() (in module pyjuice)": [[1, "pyjuice.blockify"]], "compile() (in module pyjuice)": [[2, "pyjuice.compile"]], "deepcopy() (in module pyjuice)": [[3, "pyjuice.deepcopy"]], "inputs() (in module pyjuice)": [[4, "pyjuice.inputs"]], "merge() (in module pyjuice)": [[5, "pyjuice.merge"]], "multiply() (in module pyjuice)": [[6, "pyjuice.multiply"]], "inputnodes (class in pyjuice.nodes)": [[7, "pyjuice.nodes.InputNodes"]], "__init__() (pyjuice.nodes.inputnodes method)": [[7, "pyjuice.nodes.InputNodes.__init__"]], "prodnodes (class in pyjuice.nodes)": [[8, "pyjuice.nodes.ProdNodes"]], "__init__() (pyjuice.nodes.prodnodes method)": [[8, "pyjuice.nodes.ProdNodes.__init__"]], "sumnodes (class in pyjuice.nodes)": [[9, "pyjuice.nodes.SumNodes"]], "__init__() (pyjuice.nodes.sumnodes method)": [[9, "pyjuice.nodes.SumNodes.__init__"]], "bernoulli (class in pyjuice.nodes.distributions)": [[10, "pyjuice.nodes.distributions.Bernoulli"]], "__init__() (pyjuice.nodes.distributions.bernoulli method)": [[10, "pyjuice.nodes.distributions.Bernoulli.__init__"]], "categorical (class in pyjuice.nodes.distributions)": [[11, "pyjuice.nodes.distributions.Categorical"]], "__init__() (pyjuice.nodes.distributions.categorical method)": [[11, "pyjuice.nodes.distributions.Categorical.__init__"]], "discretelogistic (class in pyjuice.nodes.distributions)": [[12, "pyjuice.nodes.distributions.DiscreteLogistic"]], "__init__() (pyjuice.nodes.distributions.discretelogistic method)": [[12, "pyjuice.nodes.distributions.DiscreteLogistic.__init__"]], "gaussian (class in pyjuice.nodes.distributions)": [[13, "pyjuice.nodes.distributions.Gaussian"]], "__init__() (pyjuice.nodes.distributions.gaussian method)": [[13, "pyjuice.nodes.distributions.Gaussian.__init__"]], "maskedcategorical (class in pyjuice.nodes.distributions)": [[14, "pyjuice.nodes.distributions.MaskedCategorical"]], "__init__() (pyjuice.nodes.distributions.maskedcategorical method)": [[14, "pyjuice.nodes.distributions.MaskedCategorical.__init__"]], "foldup_aggregate() (in module pyjuice.nodes)": [[15, "pyjuice.nodes.foldup_aggregate"]], "foreach() (in module pyjuice.nodes)": [[16, "pyjuice.nodes.foreach"]], "__init__() (pyjuice.set_block_size method)": [[17, "pyjuice.set_block_size.__init__"]], "set_block_size (class in pyjuice)": [[17, "pyjuice.set_block_size"]], "hclt() (in module pyjuice.structures)": [[18, "pyjuice.structures.HCLT"]], "hmm() (in module pyjuice.structures)": [[19, "pyjuice.structures.HMM"]], "pd() (in module pyjuice.structures)": [[20, "pyjuice.structures.PD"]], "summate() (in module pyjuice)": [[21, "pyjuice.summate"]], "unblockify() (in module pyjuice)": [[22, "pyjuice.unblockify"]], "tensorcircuit (class in pyjuice)": [[26, "pyjuice.TensorCircuit"]], "backward() (pyjuice.tensorcircuit method)": [[26, "pyjuice.TensorCircuit.backward"]], "forward() (pyjuice.tensorcircuit method)": [[26, "pyjuice.TensorCircuit.forward"]]}})